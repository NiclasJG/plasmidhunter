{
    "metadata": {
        "creationTimestamp": "2024-12-04T13:34:59Z",
        "generateName": "testworkflow-",
        "generation": 1,
        "labels": {
            "secret": "test",
            "workflows.argoproj.io/creator": "system-serviceaccount-argo-scheduler",
            "workflows.argoproj.io/workflow-template": "testworkflow"
        },
        "managedFields": [
            {
                "apiVersion": "argoproj.io/v1alpha1",
                "fieldsType": "FieldsV1",
                "fieldsV1": {
                    "f:metadata": {
                        "f:generateName": {},
                        "f:labels": {
                            ".": {},
                            "f:secret": {},
                            "f:workflows.argoproj.io/creator": {},
                            "f:workflows.argoproj.io/workflow-template": {}
                        }
                    },
                    "f:spec": {},
                    "f:status": {}
                },
                "manager": "argo",
                "operation": "Update",
                "time": "2024-12-04T13:34:59Z"
            }
        ],
        "name": "testworkflow-b56fn",
        "namespace": "argo",
        "resourceVersion": "74912905",
        "uid": "8229d01e-447b-4a0c-a2f8-1bb632d3f970"
    },
    "spec": {
        "arguments": {
            "parameters": [
                {
                    "name": "parameter",
                    "value": "trestset"
                },
                {
                    "name": "jobid",
                    "value": "6b17c40b-073c-4666-bc22-6b68b638b553"
                }
            ]
        },
        "workflowTemplateRef": {
            "name": "testworkflow"
        }
    },
    "status": {
        "finishedAt": null,
        "startedAt": null,
        "storedTemplates": {
            "namespaced/testworkflow/bakta": {
                "inputs": {
                    "artifacts": [
                        {
                            "name": "inputdata",
                            "path": "/data/plasmid.fasta",
                            "s3": {
                                "key": "jobs/{{inputs.parameters.jobid}}/input/plasmid.fasta"
                            }
                        },
                        {
                            "name": "baktadummy",
                            "path": "/data/baktadummy.json",
                            "s3": {
                                "key": "tests/baktadummy.json"
                            }
                        },
                        {
                            "name": "metadummy",
                            "path": "/data/metadummy.json",
                            "s3": {
                                "key": "tests/metadummy.json"
                            }
                        }
                    ],
                    "parameters": [
                        {
                            "name": "parameter"
                        },
                        {
                            "name": "jobid"
                        }
                    ]
                },
                "metadata": {},
                "name": "bakta",
                "outputs": {
                    "artifacts": [
                        {
                            "archive": {
                                "none": {}
                            },
                            "name": "bakta-results",
                            "path": "/data/result.json",
                            "s3": {
                                "key": "jobs/{{inputs.parameters.jobid}}/result/result.json"
                            }
                        }
                    ]
                },
                "script": {
                    "command": [
                        "python"
                    ],
                    "image": "python:alpine3.19",
                    "name": "",
                    "resources": {
                        "requests": {
                            "cpu": "2",
                            "memory": "2Gi"
                        }
                    },
                    "source": "import json\n\ndata = {}\n\nwith open('/data/baktadummy.json') as bakta:\n    data[\"annotation\"] = json.load(bakta)\n\nwith open('/data/metadummy.json') as meta:\n    metadata = json.load(meta)\n    hits = []\n    for x in range(3):\n        hits.append(metadata)\n    data[\"hits\"] = hits\n\nwith open('/data/result.json', 'w') as file:\n    json.dump(data, file)\nprint(\"Wrote data successfully\")\n"
                }
            }
        }
    }
}